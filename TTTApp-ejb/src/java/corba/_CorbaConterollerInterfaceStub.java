package corba;


/**
* TicTakTicket/corba/_CorbaConterollerInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from TicTakTicket.idl
* Mittwoch, 20. November 2013 20:15 Uhr MEZ
*/

public class _CorbaConterollerInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements corba.CorbaConterollerInterface
{


  //falls null nicht geht einzelne Methoden mit jedem Parameter machen
  public corba.StructKategorieKarte getAlleFreieKartenNachKategorie (corba.StructKategorieAuswaehlen kategorie)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getAlleFreieKartenNachKategorie", true);
                corba.StructKategorieAuswaehlenHelper.write ($out, kategorie);
                $in = _invoke ($out);
                corba.StructKategorieKarte $result = corba.StructKategorieKarteHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getAlleFreieKartenNachKategorie (kategorie        );
            } finally {
                _releaseReply ($in);
            }
  } // getAlleFreieKartenNachKategorie

  public corba.StructKategorieInformation[] getKategorieInfoVonVeranstaltung (corba.StructVeranstaltungAnzeigen veranstaltung)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getKategorieInfoVonVeranstaltung", true);
                corba.StructVeranstaltungAnzeigenHelper.write ($out, veranstaltung);
                $in = _invoke ($out);
                corba.StructKategorieInformation $result[] = corba.CorbaConterollerInterfacePackage.kategorieListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getKategorieInfoVonVeranstaltung (veranstaltung        );
            } finally {
                _releaseReply ($in);
            }
  } // getKategorieInfoVonVeranstaltung

  public corba.StructVeranstaltung[] sucheVeranstaltungNachKriterien (String datum, String ort, String kuenstler)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sucheVeranstaltungNachKriterien", true);
                $out.write_string (datum);
                $out.write_string (ort);
                $out.write_string (kuenstler);
                $in = _invoke ($out);
                corba.StructVeranstaltung $result[] = corba.CorbaConterollerInterfacePackage.veranstaltungListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sucheVeranstaltungNachKriterien (datum, ort, kuenstler        );
            } finally {
                _releaseReply ($in);
            }
  } // sucheVeranstaltungNachKriterien

  public void verkaufSpeichern (corba.StructKarteBestellen[] karten) throws corba.CobraException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("verkaufSpeichern", true);
                corba.CorbaConterollerInterfacePackage.bestellungListHelper.write ($out, karten);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:TicTakTicket/corba/CobraException:1.0"))
                    throw corba.CobraExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                verkaufSpeichern (karten        );
            } finally {
                _releaseReply ($in);
            }
  } // verkaufSpeichern

  public corba.StructKategorieInformation getKategorieInfo (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getKategorieInfo", true);
                $out.write_long (id);
                $in = _invoke ($out);
                corba.StructKategorieInformation $result = corba.StructKategorieInformationHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getKategorieInfo (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getKategorieInfo

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:TicTakTicket/corba/CorbaConterollerInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CorbaConterollerInterfaceStub
